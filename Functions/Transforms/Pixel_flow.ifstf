@Name: Pixel flow
@Version: 1.0

@flow_length: 1
@flow_inclination: 0
@flow_azimuth: 0
@pattern_width: 200
@power: 10
@seed: 42

//should be computed once
float degtorad = 0.0174532925;
float sini = sin(PI * @flow_inclination * degtorad);
float cosi = cos(PI * @flow_inclination * degtorad);
float sina = sin(2.0*PI * @flow_azimuth * degtorad);
float cosa = cos(2.0*PI * @flow_azimuth * degtorad);
vec3 flow_dir = normalize(vec3(sini*cosa, sini*sina, cosi));

vec3 block = floor(p * @pattern_width);
vec3 vblock = block + vec3(2.0) - 4.0 * vec3(
	f_hash(@seed, block.x, 1),
	f_hash(@seed, block.y, 1),
	f_hash(@seed, block.z, 1));
float fLen = f_hash(@seed*vblock.x, @seed*vblock.y, @seed*vblock.z);
float fade = pow(random(next), @power) * fLen;
vec3 p_out = p + flow_dir * @flow_length * fade;
return p_out;
