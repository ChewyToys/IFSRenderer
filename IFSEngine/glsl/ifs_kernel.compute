#version 430
//#version 430 compatibility
//#extension GL_ARB_compute_shader : enable
//#extension GL_ARB_shader_storage_buffer_object : enable

layout(binding = 0, rgba32f) uniform writeonly image2D img_output;
layout(local_size_x = 1, local_size_y = 1) in;
//layout(rgba32f, binding = 1) uniform image2D histogram;

//biggest difference between uniform buffers and shader storage buffers is that you can write to shader storage buffers from your shader programs.
layout(std140, binding = 2) buffer pointsbuf
{
	vec4 pointsstate[ ];
};

uniform bool Display;

//Default input vars:
//in uvec3 gl_NumWorkGroups;
//in uvec3 gl_WorkGroupID;
//in uvec3 gl_LocalInvocationID; //within workgroup
//in uvec3 gl_GlobalInvocationID; //within dispatch
//in uint  gl_LocalInvocationIndex; //1d local id

// storage buffers or Textures. Image Load Store
//uniform writeonly image2D destTex;

void main() {
	uint gid = gl_GlobalInvocationID.x;
	pointsstate[gid].x = pointsstate[gid].x + 1;
	ivec2 p = ivec2(pointsstate[gid].x, pointsstate[gid].y);
	imageStore(img_output, p, vec4(1.0,0.0,0.0,1.0));
}