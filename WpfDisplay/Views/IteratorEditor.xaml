<UserControl x:Class="WpfDisplay.Views.IteratorEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfDisplay.Views"
             xmlns:vm="clr-namespace:WpfDisplay.ViewModels"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=vm:IteratorViewModel}"
             x:Name="iteratorEditor"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="conv1"/>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Margin="4" Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignTitleTextBlock}">
                Selected Iterator
        </TextBlock>
        <StackPanel Orientation="Horizontal">
            <Button 
                    Command="{Binding DuplicateCommand}"
                    ToolTip="Duplicate"
                    FontWeight="Bold" Margin="4" Padding="6">
                🗎🗎
            </Button>
            <Button 
                    Command="{Binding RemoveCommand}"
                    ToolTip="Remove"
                    Margin="4" Padding="6">
                🗑️
            </Button>
        </StackPanel>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                    Command="{Binding FlipWeightCommand}"
                    ToolTip="Enable/Disable"
                    FontWeight="Bold" Margin="4,4,4,0" Padding="6" VerticalAlignment="Bottom">
                    ⚖
                </Button>
                <local:ValueSlider ValueName="Start Weight" ToolTip="Controls the probability that the iteration starts in this state." Grid.Column="1"
                               MinValue="0" Increment="0.01" 
                               Value="{Binding DataContext.StartWeight, ElementName=iteratorEditor}"
                               ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                <local:ValueSlider ValueName="Base Weight" ToolTip="Multiplies incoming connection weights for ease of use. 0 base weight means this iterator does not take part in the iteration process, because the IFS never transitions here." Grid.Column="2"
                               MinValue="0" Increment="0.01" 
                               Value="{Binding DataContext.BaseWeight, ElementName=iteratorEditor}"
                               ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                    Command="{Binding FlipOpacityCommand}"
                    ToolTip="Show/Hide"
                    FontWeight="Bold" Margin="4,4,4,0" Padding="6" VerticalAlignment="Bottom">
                    👁️
                </Button>
                <local:ValueSlider ValueName="Opacity" ToolTip="Setting this to 0 means this iterator will not draw anything." Grid.Column="1"
                                   MinValue="0" MaxValue="1" Increment="0.01" 
                                   Value="{Binding DataContext.Opacity, ElementName=iteratorEditor}"
                                   ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
            </Grid>
            <Separator Margin="10"/>
            <StackPanel>
                <Grid>
                    <Label>Coloring</Label>
                    <CheckBox IsChecked="{Binding DeltaColoring}" ToolTip="An experimental coloring mode which makes hard-to-color structures (such as 1-iterator fractals, gnarl, ..) easier to color."
                              HorizontalAlignment="Right" Foreground="LightGray" >Delta Coloring Mode</CheckBox>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <local:ValueSlider ValueName="Color Index" ToolTip="Indexes to the color on the palette. 0 -> Left most color, 1 -> Right most color." Grid.Column="0"
                                       MinValue="0" MaxValue="1" Increment="0.01" 
                                       Value="{Binding DataContext.ColorIndex, ElementName=iteratorEditor}"
                                       ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                    <local:ValueSlider ValueName="Color Speed" ToolTip="The Color Speed controls how fast the color state of the IFS progresses towards this iterator's Color Index. 0 -> no effect on colors. 1 -> Draw with the selected color index immediately."  Grid.Column="1"
                                       Increment="0.01"
                                       Value="{Binding DataContext.ColorSpeed, ElementName=iteratorEditor}"
                                       ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                </Grid>
                <local:PaletteButton Palette="{Binding Path=DataContext.Palette, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Height="20"/>
            </StackPanel>
        </StackPanel>
        <Separator Margin="10"/>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <local:ValueSlider ValueName="Mix" ToolTip="Linearly interpolate between the states before/after the transform. 0 -> The transform has no effect on the position. 1 -> Default." Grid.Column="0"
                                   Increment="0.001" 
                                   Value="{Binding DataContext.Mix, ElementName=iteratorEditor}"
                                   ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                <local:ValueSlider ValueName="Add" ToolTip="Add up the positions before/after the transform." Grid.Column="1"
                                   Increment="0.001"
                                   Value="{Binding DataContext.Add, ElementName=iteratorEditor}"
                                   ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
            </Grid>
            <TextBlock Text="{Binding TransformName}" Margin="4 0 0 0"  Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignCaptionTextBlock}" />
            <ItemsControl ItemsSource="{Binding Parameters}">
                <ItemsControl.Resources>
                    <!--real-->
                    <DataTemplate DataType="{x:Type vm:RealParamViewModel}">
                        <Grid DataContext="{Binding}" x:Name="dummy">
                            <local:ValueSlider
                                    Increment="0.001"
                                    ValueName="{Binding DataContext.Name, ElementName=dummy}" 
                                    Value="{Binding DataContext.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ElementName=dummy}"
                                    ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                        </Grid>
                    </DataTemplate>
                    <!--vec3-->
                    <DataTemplate DataType="{x:Type vm:Vec3ParamViewModel}">
                        <StackPanel DataContext="{Binding}" x:Name="dummy">
                            <Label Content="{Binding Name}" />
                            <local:ValueSlider
                                    Increment="0.001"
                                    Value="{Binding DataContext.ValueX, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ElementName=dummy}"
                                    ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                            <local:ValueSlider
                                    Increment="0.001"
                                    Value="{Binding DataContext.ValueY, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ElementName=dummy}"
                                    ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                            <local:ValueSlider
                                    Increment="0.001"
                                    Value="{Binding DataContext.ValueZ, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ElementName=dummy}"
                                    ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=iteratorEditor}"/>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.Resources>
            </ItemsControl>
        </StackPanel>
    </StackPanel>
</UserControl>
