<UserControl x:Class="WpfDisplay.Views.IteratorEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfDisplay.Views"
             xmlns:vm="clr-namespace:WpfDisplay.ViewModels"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=vm:IteratorViewModel}"
             x:Name="iteratorEditor"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="conv1"/>
    </UserControl.Resources>
    <StackPanel>
        <TextBlock Margin="4" Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignTitleTextBlock}">
                Selected Iterator
        </TextBlock>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" VerticalAlignment="Top"
                    Text="{Binding IteratorName, UpdateSourceTrigger=PropertyChanged}"
                    md:HintAssist.Hint="Name"
                    Style="{StaticResource MaterialDesignFloatingHintTextBox}"/>
            <StackPanel Grid.Column="1" Orientation="Horizontal">
                <Button 
                        Command="{Binding DuplicateCommand}"
                        ToolTip="Duplicate (Ctrl+D)"
                        FontWeight="Bold" Margin="4" Padding="6">
                    🗎🗎
                </Button>
                <Button 
                        Command="{Binding RemoveCommand}"
                        ToolTip="Remove (Delete)"
                        Margin="4" Padding="6">
                    🗑️
                </Button>
            </StackPanel>
        </Grid>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                    Command="{Binding FlipWeightCommand}"
                    ToolTip="Enable/Disable (Ctrl+W)" IsTabStop="False"
                    FontWeight="Bold" Margin="4,4,4,0" Padding="6" VerticalAlignment="Bottom">
                    ⚖
                </Button>
                <local:ValueSlider Grid.Column="1" DataContext="{Binding StartWeight}"/>
                <local:ValueSlider Grid.Column="2" DataContext="{Binding BaseWeight}"/>
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                    Command="{Binding FlipOpacityCommand}"
                    ToolTip="Show/Hide (Ctrl+O)" IsTabStop="False"
                    FontWeight="Bold" Margin="4,4,4,0" Padding="6" VerticalAlignment="Bottom">
                    👁️
                </Button>
                <local:ValueSlider Grid.Column="1" DataContext="{Binding Opacity}"/>
            </Grid>
            <Separator Margin="10"/>
            <StackPanel>
                <Grid>
                    <Label>Coloring</Label>
                    <CheckBox IsChecked="{Binding DeltaColoring}"
                              HorizontalAlignment="Right" Foreground="LightGray">
                        <CheckBox.ToolTip>
                            <ToolTip Width="500">
                                <StackPanel Margin="8">
                                    <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">Alternative Coloring (Delta-P coloring mode)</TextBlock>
                                    <TextBlock Style="{StaticResource MaterialDesignBody1TextBlock}" TextWrapping="Wrap">
                                        An experimental coloring mode which makes hard-to-color structures (such as 1-iterator fractals, gnarl, ..) easier to color.
                                    </TextBlock>
                                    <Image Source="/IFSRenderer;component/Resources/deltap-tooltip.jpg" HorizontalAlignment="Center" />
                                </StackPanel>
                            </ToolTip>
                        </CheckBox.ToolTip>
                        Alternative Coloring
                    </CheckBox>
                </Grid>
                <local:PaletteSlider
                    ToolTip="The color of the iterator."
                    ColorIndex="{Binding ColorIndex, Mode=TwoWay}"
                    Palette="{Binding Path=DataContext.Palette, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                <local:ValueSlider Grid.Column="1" DataContext="{Binding ColorSpeed}"/>
            </StackPanel>
        </StackPanel>
        <Separator Margin="10"/>
        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <local:ValueSlider DataContext="{Binding Mix}" Grid.Column="0"/>
                <local:ValueSlider DataContext="{Binding Add}" Grid.Column="1"/>
            </Grid>
            <TextBlock Text="{Binding TransformName}" Margin="4 0 0 0"  Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignCaptionTextBlock}" />
            <ItemsControl ItemsSource="{Binding Parameters}" IsTabStop="False">
                <ItemsControl.Resources>
                    <!--real-->
                    <DataTemplate DataType="{x:Type vm:RealParamViewModel}">
                        <local:ValueSlider DataContext="{Binding SliderViewModel}"/>
                    </DataTemplate>
                    <!--vec3-->
                    <DataTemplate DataType="{x:Type vm:Vec3ParamViewModel}">
                        <local:Vec3Control DataContext="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.Resources>
            </ItemsControl>
        </StackPanel>
    </StackPanel>
</UserControl>
