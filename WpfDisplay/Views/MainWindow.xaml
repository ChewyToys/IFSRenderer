<Window x:Class="WpfDisplay.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfDisplay.Views"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:vm="clr-namespace:WpfDisplay.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:conv="clr-namespace:WpfDisplay.Converters" 
        xmlns:disp="clr-namespace:IFSEngine.WPF.InteractiveDisplay;assembly=IFSEngine.WPF.InteractiveDisplay"
        xmlns:animation="clr-namespace:WpfDisplay.Views.Animation"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Width="1920" Height="1080" WindowState="Maximized"
        AllowDrop="True" DragOver="mainWindow_DragOver" Drop="mainWindow_Drop"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        UseLayoutRounding="True"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        x:Name="mainWindow"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}"
        >
    <Window.Resources>
        <conv:NullVisibilityConverter x:Key="nullVisibilityConverter"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Undo" Executed="Undo_Executed" CanExecute="Undo_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Redo" Executed="Redo_Executed" CanExecute="Redo_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Copy" Executed="Copy_Executed" CanExecute="Copy_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Paste" Executed="Paste_Executed" CanExecute="Paste_CanExecute"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+N" Command="{Binding NewCommand}"/>
        <KeyBinding Gesture="CTRL+O" Command="{Binding LoadParamsCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+S" Command="{Binding SaveParamsCommand}"/>
        <KeyBinding Gesture="CTRL+E" Command="{Binding SaveImageCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+E" Command="{Binding SaveExrCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+C" Command="{Binding ExportToClipboardCommand}"/>
        <KeyBinding Gesture="CTRL+R" Command="{Binding LoadRandomCommand}"/>
        <KeyBinding Gesture="PAUSE" Command="{Binding StartStopRenderingCommand}"/>
        <KeyBinding Gesture="F1" Command="{Binding VisitWikiCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="📑 _File">
                <MenuItem Header="📑 _New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="📂 _Load..." Command="{Binding LoadParamsCommand}" InputGestureText="Ctrl+O"/>
                <MenuItem Header="💾 _Save as..." Command="{Binding SaveParamsCommand}" InputGestureText="Ctrl+Shift+S"/>
                <Separator/>
                <MenuItem Header="📝 Copy" Command="ApplicationCommands.Copy" ToolTip="Copy params to Clipboard (Ctrl+C)" InputGestureText="Ctrl+C"/>
                <MenuItem Header="📋 Paste" Command="ApplicationCommands.Paste" ToolTip="Paste params from Clipboard (Ctrl+V)" InputGestureText="Ctrl+V"/>
                <Separator/>
                <MenuItem Header="⚙️ Settings..." Click="SettingsButton_Click"/>
                <Separator/>
                <MenuItem Header="🚪 Exit" Command="{Binding CloseWorkspaceCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="↩️" Command="ApplicationCommands.Undo" ToolTip="Undo (Ctrl+Z)" InputGestureText="Ctrl+Z"/>
            <MenuItem Header="↪️" Command="ApplicationCommands.Redo" ToolTip="Redo (Ctrl+Y)" InputGestureText="Ctrl+Y"/>
            <Separator Width="10" Style="{StaticResource MaterialDesignLightSeparator}"/>
            <MenuItem Header="🏗 Editor" Click="EditorButton_Click" ToolTip="Open the editor window"/>
            <MenuItem Header="🔮 Generator" Click="GeneratorButton_Click" ToolTip="Open the generator window"/>
            <MenuItem Header="🎲 _Random" Command="{Binding LoadRandomCommand}" ToolTip="Generate random params (Ctrl+R)" InputGestureText="Ctrl+R"/>
            <Separator Width="10" Style="{StaticResource MaterialDesignLightSeparator}"/>
            <MenuItem Header="🖬 E_xport">
                <MenuItem Icon="🖼" Header="Export to _PNG..." Command="{Binding SaveImageCommand}" InputGestureText="Ctrl+E"/>
                <MenuItem Icon="📊" Header="Export to _EXR..." Command="{Binding SaveExrCommand}" InputGestureText="Ctrl+Shift+E"/>
                <Separator/>
                <MenuItem Icon="📋" Header="Export to _clipboard" Command="{Binding ExportToClipboardCommand}" InputGestureText="Ctrl+Shift+C"/>
            </MenuItem>
            <MenuItem Header="❓ Help" HorizontalAlignment="Right">
                <MenuItem Icon="📚" Header="Wiki..." InputGestureText="F1" Command="{Binding VisitWikiCommand}"/>
                <MenuItem Icon="🏛️" Header="Forum..." Command="{Binding VisitForumCommand}"/>
                <MenuItem Icon="🙋" Header="Send Feedback">
                    <MenuItem Icon="🐞" Header="Report a bug..." Command="{Binding ReportBugCommand}"/>
                    <MenuItem Icon="🙋" Header="File an issue..." Command="{Binding VisitIssuesCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Icon="👷" Header="About..." Click="AboutButton_Click"/>
                <MenuItem Icon="💿" Header="Check for updates..." Command="{Binding CheckUpdatesCommand}"/>
            </MenuItem>
        </Menu>

        <DockingManager x:Name="dockManager"
            Grid.Row="1"
            AllowMixedOrientation="True"
            AutoWindowSizeWhenOpened="True"
            DocumentClosing="dockManager_DocumentClosing"
            IsVirtualizingAnchorable="True"
            IsVirtualizingDocument="True">
            <DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding DataContext.IFSTitle, ElementName=mainWindow, Mode=OneWay, StringFormat='\{0\}'}"/>
                </DataTemplate>
            </DockingManager.DocumentHeaderTemplate>
            <LayoutRoot PropertyChanged="LayoutRoot_PropertyChanged">
                <LayoutPanel Orientation="Vertical">
                    <LayoutPanel Orientation="Horizontal">
                        <!--Left Side-->
                        <LayoutAnchorablePaneGroup Orientation="Vertical" DockWidth="200">
                            <LayoutAnchorablePane DockHeight="*">
                                <LayoutAnchorable
                                    Title="Tonemapping" ToolTip="Tonemapping" ContentId="Tonemapping"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                        <local:ToneMappingView DataContext="{Binding ToneMappingViewModel}"/>
                                    </ScrollViewer>
                                </LayoutAnchorable>
                            </LayoutAnchorablePane>
                            <LayoutAnchorablePane DockHeight="auto">
                                <LayoutAnchorable
                                    Title="Environment" ToolTip="Environment" ContentId="Environment"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                        <StackPanel Margin="8">
                                            <Label>Background</Label>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <xctk:ColorPicker Grid.Column="0" Margin="0,0,8,0"
                                                    SelectedColor="{Binding IFSViewModel.BackgroundColor}"
                                                    IsEnabled="{Binding IsColorPickerEnabled}"/>
                                                <CheckBox Grid.Column="1" ToolTip="Transparent background"
                                                    IsChecked="{Binding TransparentBackground}">🙾🙾</CheckBox>
                                            </Grid>
                                            <local:ValueSlider DataContext="{Binding IFSViewModel.FogEffect}"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </LayoutAnchorable>
                            </LayoutAnchorablePane>
                            <LayoutAnchorablePane DockHeight="*">
                                <LayoutAnchorable
                                    Title="Camera" ToolTip="Camera" ContentId="Camera"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                        <local:CameraSettingsView DataContext="{Binding CameraSettingsViewModel}"/>
                                    </ScrollViewer>
                                </LayoutAnchorable>
                                <LayoutAnchorable
                                    Title="Camera Transform" ToolTip="Camera Transform" ContentId="Camera Transform"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    Under construction 🏗️
                                </LayoutAnchorable>
                            </LayoutAnchorablePane>
                        </LayoutAnchorablePaneGroup>
                        <!--Middle-->
                        <LayoutPanel Orientation="Vertical">
                            <LayoutDocumentPaneGroup>
                                <LayoutDocumentPane>
                                    <LayoutDocument
                                        ContentId="mainDocument"
                                        IconSource="/Resources/icon_128.png">
                                        <Grid Background="Black">
                                            <disp:InteractiveDisplay x:Name="mainDisplay"
                                                Visibility="{Binding Path=., Converter={StaticResource nullVisibilityConverter}}"
                                                InteractionStartedCommand="{Binding TakeSnapshotCommand}"
                                                InteractionFinishedCommand="{Binding InteractionFinishedCommand}"
                                                Sensitivity="{Binding Sensitivity}"
                                                InvertRotationAxisX="{Binding InvertAxisX}" InvertRotationAxisY="{Binding InvertAxisY}" InvertRotationAxisZ="{Binding InvertAxisZ}"/>
                                            <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                                                Visibility="{Binding Path=., Converter={StaticResource nullVisibilityConverter}, ConverterParameter=true}"
                                                Width="50" Height="50"
                                                IsIndeterminate="True"/>
                                        </Grid>
                                    </LayoutDocument>
                                </LayoutDocumentPane>
                            </LayoutDocumentPaneGroup>
                            <LayoutAnchorablePaneGroup DockHeight="300">
                                <LayoutAnchorablePane>
                                    <LayoutAnchorable
                                    Title="Animations" ToolTip="Animations" ContentId="Animations"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                        <animation:AnimationPanel DataContext="{Binding AnimationViewModel}"/>
                                    </LayoutAnchorable>
                                </LayoutAnchorablePane>
                            </LayoutAnchorablePaneGroup>
                        </LayoutPanel>
                        <!--Right Side-->
                        <LayoutAnchorablePaneGroup Orientation="Vertical" DockWidth="250">
                            <LayoutAnchorablePane>
                                <LayoutAnchorable
                                    Title="Quality Settings" ToolTip="Quality Settings" ContentId="Quality Settings"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                        <StackPanel>
                                            <Grid Margin="4">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" Margin="4" Width="45" FontWeight="ExtraBold"
                                                    Command="{Binding StartStopRenderingCommand}"
                                                    Content="{Binding IsRenderingIcon}"
                                                    ToolTip="Resume/Pause rendering (Pause key)"/>
                                                <local:TitleBox Grid.Column="1" Margin="4"/>
                                            </Grid>
                                            <local:QualitySettingsView DataContext="{Binding QualitySettingsViewModel}" Margin="4,0,4,4"/>
                                        </StackPanel>
                                    </ScrollViewer>
                                </LayoutAnchorable>
                                <!--<LayoutAnchorable
                                    Title="asd" ToolTip="asd" ContentId="asd"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <Button Width="200" Height="300">other settings</Button>
                                </LayoutAnchorable>-->
                            </LayoutAnchorablePane>
                            <LayoutAnchorablePane>
                                <LayoutAnchorable
                                    Title="Performance" ToolTip="Performance" ContentId="Performance"
                                    CanClose="True" CanFloat="True" CanMove="True" CanHide="True">
                                    <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                        <local:PerformanceView DataContext="{Binding PerformanceViewModel}"/>
                                    </ScrollViewer>
                                </LayoutAnchorable>
                            </LayoutAnchorablePane>
                        </LayoutAnchorablePaneGroup>
                    </LayoutPanel>
                </LayoutPanel>

                <!--<LayoutRoot.LeftSide>
                    <LayoutAnchorSide>
                        <LayoutAnchorGroup>
                            <LayoutAnchorable
                                Title="AutoHide1 Content"
                                ContentId="AutoHide1Content"
                                IconSource="/Resources/icon_128.png">
                                <TextBox Text="{Binding TestTimer, Mode=OneWay, StringFormat='AutoHide Attached to Timer ->\{0\}'}" />
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="AutoHide2 Content" ContentId="AutoHide2Content">
                                <StackPanel Orientation="Vertical">
                                    <TextBox />
                                    <TextBox />
                                </StackPanel>
                            </LayoutAnchorable>
                        </LayoutAnchorGroup>
                    </LayoutAnchorSide>
                </LayoutRoot.LeftSide>-->
                
            </LayoutRoot>
        </DockingManager>

        <md:Card Grid.Row="3" Padding="3" Margin="8" VerticalAlignment="Stretch">
            <StatusBar Background="Transparent">
                <StatusBarItem>
                    <TextBlock
                        Text="{Binding StatusBarText, NotifyOnTargetUpdated=True}"
                        Foreground="LightGray">
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:1" From="0.0" To="1.0"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </StatusBarItem>
            </StatusBar>
        </md:Card>

    </Grid>
</Window>
