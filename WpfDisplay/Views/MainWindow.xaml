<Window x:Class="WpfDisplay.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfDisplay.Views"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:vm="clr-namespace:WpfDisplay.ViewModels"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:conv="clr-namespace:WpfDisplay.Converters" 
        xmlns:disp="clr-namespace:IFSEngine.WPF.InteractiveDisplay;assembly=IFSEngine.WPF.InteractiveDisplay"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}"
        Width="1920" Height="1080" WindowState="Maximized"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        x:Name="mainWindow"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <conv:NullVisibilityConverter x:Key="nullVisibilityConverter"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Undo" Executed="Undo_Executed" CanExecute="Undo_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Redo" Executed="Redo_Executed" CanExecute="Redo_CanExecute"/>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+N" Command="{Binding NewCommand}"/>
        <KeyBinding Gesture="CTRL+O" Command="{Binding LoadParamsCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+S" Command="{Binding SaveParamsCommand}"/>
        <KeyBinding Gesture="CTRL+E" Command="{Binding SaveImageCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+E" Command="{Binding SaveExrCommand}"/>
        <KeyBinding Gesture="CTRL+SHIFT+C" Command="{Binding ExportToClipboardCommand}"/>
        <KeyBinding Gesture="CTRL+R" Command="{Binding LoadRandomCommand}"/>
        <KeyBinding Gesture="F1" Command="{Binding VisitWikiCommand}"/>
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="3*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
        </Grid.ColumnDefinitions>
        <Menu Grid.Row="0">
            <Menu.ItemsPanel>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Menu.ItemsPanel>
            <MenuItem Header="📑 _File">
                <MenuItem Header="📑 _New" Command="{Binding NewCommand}" InputGestureText="Ctrl+N"/>
                <MenuItem Header="📂 _Load..." Command="{Binding LoadParamsCommand}" InputGestureText="Ctrl+O"/>
                <MenuItem Header="💾 _Save as..." Command="{Binding SaveParamsCommand}" InputGestureText="Ctrl+Shift+S"/>
                <Separator/>
                <MenuItem Header="⚙️ Settings..." Click="SettingsButton_Click"/>
                <Separator/>
                <MenuItem Header="Exit" Command="{Binding CloseWorkspaceCommand}" InputGestureText="Alt+F4"/>
            </MenuItem>
            <MenuItem Header="↩️" Command="ApplicationCommands.Undo" ToolTip="Undo (Ctrl+Z)" InputGestureText="Ctrl+Z"/>
            <MenuItem Header="↪️" Command="ApplicationCommands.Redo" ToolTip="Redo (Ctrl+Y)" InputGestureText="Ctrl+Y"/>
            <Separator Width="10" Style="{StaticResource MaterialDesignLightSeparator}"/>
            <MenuItem Header="🏗 Editor" Click="EditorButton_Click" ToolTip="Open the editor window"/>
            <MenuItem Header="🔮 Generator" Click="GeneratorButton_Click" ToolTip="Open the generator window"/>
            <MenuItem Header="🎲 _Random" Command="{Binding LoadRandomCommand}" ToolTip="Generate random params (Ctrl+R)" InputGestureText="Ctrl+R"/>
            <Separator Width="10" Style="{StaticResource MaterialDesignLightSeparator}"/>
            <MenuItem Header="🖬 E_xport">
                <MenuItem Icon="🖼" Header="Export to _PNG..." Command="{Binding SaveImageCommand}" InputGestureText="Ctrl+E"/>
                <MenuItem Icon="📊" Header="Export to _EXR..." Command="{Binding SaveExrCommand}" InputGestureText="Ctrl+Shift+E"/>
                <Separator/>
                <MenuItem Icon="📋" Header="Export to _clipboard" Command="{Binding ExportToClipboardCommand}" InputGestureText="Ctrl+Shift+C"/>
            </MenuItem>
            <MenuItem Header="❓ Help" HorizontalAlignment="Right">
                <MenuItem Icon="📚" Header="Wiki..." InputGestureText="F1" Command="{Binding VisitWikiCommand}"/>
                <MenuItem Icon="🏛️" Header="Forum..." Command="{Binding VisitForumCommand}"/>
                <MenuItem Icon="🙋" Header="Send Feedback">
                    <MenuItem Icon="🐞" Header="Report a bug..." Command="{Binding ReportBugCommand}"/>
                    <MenuItem Icon="🙋" Header="File an issue..." Command="{Binding VisitIssuesCommand}"/>
                </MenuItem>
                <Separator/>
                <MenuItem Icon="👷" Header="About..." Click="AboutButton_Click"/>
                <MenuItem Icon="💿" Header="Check for updates..." Command="{Binding CheckUpdatesCommand}"/>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300"/>
            </Grid.ColumnDefinitions>
            <!-- Effects -->
            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Hidden">
                <StackPanel>
                    <local:ToneMappingView DataContext="{Binding ToneMappingViewModel}"/>
                    <md:Card Padding="6" Margin="8">
                        <StackPanel>
                            <TextBlock Grid.Row="0"  Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignTitleTextBlock}" >Environment</TextBlock>
                            <Label>Background</Label>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <xctk:ColorPicker Grid.Column="0" Margin="0,0,8,0"
                                    SelectedColor="{Binding IFSViewModel.BackgroundColor}"
                                    IsEnabled="{Binding IsColorPickerEnabled}"/>
                                <CheckBox Grid.Column="1" ToolTip="Transparent background"
                                    IsChecked="{Binding TransparentBackground}">🙾🙾</CheckBox>
                            </Grid>
                            <local:ValueSlider ValueName="Fog effect"
                                    MinValue="0"
                                    Value="{Binding DataContext.IFSViewModel.FogEffect, ElementName=mainWindow}"
                                    ValueChangedCommand="{Binding DataContext.TakeSnapshotCommand, ElementName=mainWindow}"/>
                        </StackPanel>
                    </md:Card>
                    <local:CameraSettingsView DataContext="{Binding CameraSettingsViewModel}"/>
                </StackPanel>
            </ScrollViewer>
            <!-- Display -->
            <md:Card Grid.Column="1" Padding="4" Margin="8" VerticalAlignment="Stretch">
                <Grid>
                    <disp:InteractiveDisplay x:Name="mainDisplay"
                        Visibility="{Binding Path=., Converter={StaticResource nullVisibilityConverter}}"
                        InteractionStartedCommand="{Binding TakeSnapshotCommand}"
                        InteractionFinishedCommand="{Binding InteractionFinishedCommand}"
                        InvertRotationAxisX="{Binding InvertAxisX}" InvertRotationAxisY="{Binding InvertAxisY}" InvertRotationAxisZ="{Binding InvertAxisZ}"/>
                    <ProgressBar
                        Visibility="{Binding Path=., Converter={StaticResource nullVisibilityConverter}, ConverterParameter=true}"
                        Width="100" Height="25"
                        IsIndeterminate="True"/>
                </Grid>
            </md:Card>
            <!-- Render Settings -->
            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Hidden">
                <StackPanel>
                    <local:TitleBox/>
                    <local:QualitySettingsView DataContext="{Binding QualitySettingsViewModel}"/>
                    <local:PerformanceView DataContext="{Binding PerformanceViewModel}"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>
        <md:Card Grid.Row="2" Padding="6" Margin="8" VerticalAlignment="Stretch">
            <StackPanel>
                <TextBlock Text="🎥 Animation" ToolTip="🛠️ Under Construction" Margin="4 0 0 0"  Foreground="Gray" FontWeight="Bold" Style="{DynamicResource MaterialDesignTitleTextBlock}" />
            </StackPanel>
        </md:Card>
        <md:Card Grid.Row="3" Padding="3" Margin="8" VerticalAlignment="Stretch">
            <StatusBar Background="Transparent">
                <StatusBarItem>
                    <TextBlock
                        Text="{Binding StatusBarText, NotifyOnTargetUpdated=True}"
                        Foreground="LightGray">
                        <!--<TextBlock.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:0" Duration="0:0:1" From="0.0" To="1.0"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>-->
                    </TextBlock>
                </StatusBarItem>
            </StatusBar>
        </md:Card>
    </Grid>
</Window>
